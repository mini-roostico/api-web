services:
  # Rest api service
  api-server:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    environment:
      - API_PASSWORD=pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - PRODUCTION=true
      - AT_PRIVATE=/run/secrets/at_private.pem
      - RT_PRIVATE=/run/secrets/rt_private.pem
      - DOCS=/usr/src/app/api/swagger.json
    volumes:
    - "./secrets:/run/secrets:ro"
    links:
      - mongodb
      - redis

  # Authentication service
  auth-server:
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    ports:
      - "8180:8180"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - PRODUCTION=true
      - AT_PRIVATE=/run/secrets/at_private.pem
      - RT_PRIVATE=/run/secrets/rt_private.pem
      - DOCS=/usr/src/app/auth/swagger.json
    depends_on:
      - mongodb
      - redis
    volumes:
      - "./secrets:/run/secrets:ro"
    links:
      - mongodb
      - redis

  # Mongodb service
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet

  # Redis service, used for api rate limiting
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - type: bind
        source: ./cache
        target: /data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
